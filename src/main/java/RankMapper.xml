<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="resource.RankMapper">
	
	<!-- getGrade -->
	<select id="getGrade" parameterType="int" resultType="string">
		SELECT GRADE FROM GRADES WHERE #{property} BETWEEN MIN_VALUE AND MAX_VALUE
	</select>
	
	<!-- updateGrade -->
	<update id="updateGrade" parameterType="java.util.HashMap">
		UPDATE USERS SET GRADE = (SELECT GRADE_ID FROM (SELECT A.ACCOUNT_ID, (A.CREDIT + NVL(T1.SUM_CURJUKA, 0)) AS PROPERTY FROM ACCOUNTS A LEFT OUTER JOIN (SELECT ACCOUNT_ID, SUM(REPLACE(CURJUKA, ',', '')) AS SUM_CURJUKA FROM PURCHASE_LIST P INNER JOIN COMPANYS C ON(P.COMPANY_ID = C.COMPANY_ID) GROUP BY ACCOUNT_ID) T1 ON(A.ACCOUNT_ID = T1.ACCOUNT_ID)) T2 INNER JOIN GRADES R ON (T2.PROPERTY BETWEEN R.MIN_VALUE AND R.MAX_VALUE) WHERE T2.ACCOUNT_ID = #{account_id}) WHERE U_ID = #{u_id}
	</update>
	
	<!-- deleteRank -->
	<delete id="deleteRank">
		DELETE FROM RANKS
	</delete>
	
	<!-- insertRank -->
	<insert id="insertRank">
		INSERT INTO RANKS SELECT S.* FROM(SELECT ROW_NUMBER() OVER (ORDER BY T4.PROPERTY DESC) NUM, T4.* FROM(SELECT NICKNAME, PROPERTY, G.GRADE FROM (SELECT NICKNAME, PROPERTY, GRADE FROM (SELECT A.U_ID, (A.CREDIT + NVL(T1.SUM_CURJUKA, 0)) AS PROPERTY FROM ACCOUNTS A LEFT OUTER JOIN (SELECT ACCOUNT_ID, SUM(REPLACE(CURJUKA, ',', '')) AS SUM_CURJUKA FROM PURCHASE_LIST P INNER JOIN COMPANYS C ON(P.COMPANY_ID = C.COMPANY_ID) GROUP BY ACCOUNT_ID) T1 ON(A.ACCOUNT_ID = T1.ACCOUNT_ID)) T2 INNER JOIN USERS U ON(T2.U_ID = U.U_ID)) T3 INNER JOIN GRADES G ON(T3.GRADE = G.GRADE_ID)) T4) S
	</insert>
	
	<select id="getRankList" parameterType="int" resultType="vo.RankVO">
		SELECT * FROM RANKS WHERE RANK_ID BETWEEN #{startIndex} AND #{startIndex}+9
	</select>
	
</mapper>