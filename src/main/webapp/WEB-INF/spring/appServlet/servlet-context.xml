<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!--  hadoop 설정 
	<hadoop:configuration id="hdConf">
		fs.defaultFS=hdfs://192.168.111.120:9000
	</hadoop:configuration>
	 -->
	 
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- config.properties 설정 부분 -->
	<util:properties id="config" location="classpath:/config/config.properties"/>
	
	<!-- 파일 업로드/다운로드 처리 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
		
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.project.mstock" />
	<context:component-scan base-package="service" />
	<context:component-scan base-package="dao" />
	<context:component-scan base-package="vo" />
	
	<!--   oracle db연동/ mybatis 설정
	
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@localhost:1521:XE" />
		<beans:property name="username" value="{username}" />
		<beans:property name="password" value="{password}" />
	</beans:bean>
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:/mybatis-config.xml" />
		<beans:property name="mapperLocations"
			value="classpath:/*Mapper.xml" />
	</beans:bean>
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>
	
	 -->
</beans:beans>